// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestowyKolos2.Models;

#nullable disable

namespace TestowyKolos2.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230613220909_ChangePropNames")]
    partial class ChangePropNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestowyKolos2.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirtName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirtName = "Zbychu",
                            LastName = "Zbyszkowski"
                        });
                });

            modelBuilder.Entity("TestowyKolos2.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirtName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirtName = "Zbychu2",
                            LastName = "Zbyszkowski2"
                        });
                });

            modelBuilder.Entity("TestowyKolos2.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AcceptedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FulfilledAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptedAt = new DateTime(2023, 6, 13, 22, 9, 9, 103, DateTimeKind.Utc).AddTicks(6249),
                            ClientID = 1,
                            EmployeeID = 1
                        });
                });

            modelBuilder.Entity("TestowyKolos2.Models.OrderPastry", b =>
                {
                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("PastryID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.HasKey("OrderID", "PastryID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("PastryID");

                    b.ToTable("Order_Pastry", (string)null);

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            PastryID = 1,
                            Amount = 5,
                            Comments = "dsdadsds"
                        });
                });

            modelBuilder.Entity("TestowyKolos2.Models.Pastry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("Pastries");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Ciastko",
                            Price = 12.4m,
                            Type = "Ciasto"
                        });
                });

            modelBuilder.Entity("TestowyKolos2.Models.Order", b =>
                {
                    b.HasOne("TestowyKolos2.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestowyKolos2.Models.Employee", null)
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TestowyKolos2.Models.OrderPastry", b =>
                {
                    b.HasOne("TestowyKolos2.Models.Order", null)
                        .WithMany("OrdersPastries")
                        .HasForeignKey("EmployeeID");

                    b.HasOne("TestowyKolos2.Models.Pastry", null)
                        .WithMany("OrdersPastries")
                        .HasForeignKey("PastryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestowyKolos2.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TestowyKolos2.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TestowyKolos2.Models.Order", b =>
                {
                    b.Navigation("OrdersPastries");
                });

            modelBuilder.Entity("TestowyKolos2.Models.Pastry", b =>
                {
                    b.Navigation("OrdersPastries");
                });
#pragma warning restore 612, 618
        }
    }
}
